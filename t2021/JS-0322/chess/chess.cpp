#include<bits/stdc++.h>
using namespace std;
int T,n,m,q,nx,mx,ans,maxn=1000000;
int a[1000000],heng[1000000],zong[1000000],b[1000000],c[1000000];
int dfs(int col,int v,int x,int y,int num)
{
	if(c[(x-1)*m+y]==0)c[(x-1)*m+y]=1,ans++;
//	cout<<x<<" "<<y<<endl;
	if(num==0)
	{
		//1
		if(heng[(x-1)*m+y]==1&&y<m )
		{
			if(a[(x-1)*m+y+1]/1000000!=col&&a[(x-1)*m+y+1]%1000000<=v&&a[(x-1)*m+y+1]/1000000!=2)
			{
				
				if(c[(x-1)*m+y+1]==0)c[(x-1)*m+y+1]=1,ans++;
			}
			if(a[(x-1)*m+y+1]/1000000==2)
			{
				if(c[(x-1)*m+y+1]==0)c[(x-1)*m+y+1]=1,
				ans++;
			}
		}
		if(heng[(x-1)*m+y-1]==1&&y>1)
		{
			if(a[(x-1)*m+y-1]/1000000!=col&&a[(x-1)*m+y-1]%1000000<=v&&a[(x-1)*m+y-1]/1000000!=2)
			{
				if(c[(x-1)*m+y-1]==0)c[(x-1)*m+y-1]=1,
				ans++;
			}
			if(a[(x-1)*m+y-1]/1000000==2)
			{
				if(c[(x-1)*m+y-1]==0)c[(x-1)*m+y-1]=1,       
				ans++;
			}
		}
		if(zong[(x-2)*m+y]==1&&x>1)
		{
			if(a[(x-2)*m+y]/1000000!=col&&a[(x-2)*m+y]%1000000<=v&&a[(x-2)*m+y]/1000000!=2)
			{
				if(c[(x-2)*m+y]==0)c[(x-2)*m+y]=1,
				ans++;
			}
			if(a[(x-2)*m+y]/1000000==2)
			{
				if(c[(x-2)*m+y]==0)c[(x-2)*m+y]=1,
				ans++;
			}
		}
		if(zong[(x-1)*m+y]==1&&x<n)
		{
			if(a[x*m+y]/1000000!=col&&a[x*m+y]%1000000<=v&&a[x*m+y]/1000000!=2)
			{
				if(c[x*m+y]==0)c[x*m+y]=1,
				ans++;
			}
			if(a[x*m+y]/1000000==2)
			{
				if(c[x*m+y]==0)c[x*m+y]=1,
				ans++;
			}
		}
		
		//2
		if(heng[(x-1)*m+y]==2&&y<m)
		{
		
			if(a[(x-1)*m+y+1]/1000000!=col&&a[(x-1)*m+y+1]%1000000<=v&&a[(x-1)*m+y+1]/1000000!=2)
			{
				if(c[(x-1)*m+y+1]==0)c[(x-1)*m+y+1]=1,
				ans++;
			}
			if(a[(x-1)*m+y+1]/1000000==2)
			{
				dfs(col,v,x,y+1,1);
			}
		}
		if(heng[(x-1)*m+y-1]==2&&y>1)
		{
			if(a[(x-1)*m+y-1]/1000000!=col&&a[(x-1)*m+y-1]%1000000<=v&&a[(x-1)*m+y-1]/1000000!=2)
			{
				if(c[(x-1)*m+y-1]==0)c[(x-1)*m+y-1]=1,
				ans++;
			}
			if(a[(x-1)*m+y-1]/1000000==2)
			{
				dfs(col,v,x,y-1,2);
			}
		}
		if(zong[(x-2)*m+y]==2&&x>1)
		{
			if(a[(x-2)*m+y]/1000000!=col&&a[(x-2)*m+y]%1000000<=v&&a[(x-2)*m+y]/1000000!=2)
			{
				if(c[(x-2)*m+y]==0)c[(x-2)*m+y]=1,
				ans++;
			}
			if(a[(x-2)*m+y]/1000000==2)
			{
				dfs(col,v,x-1,y,3);
			}
		}
		if(zong[(x-1)*m+y]==2&&x<n)
		{
			if(a[x*m+y]/1000000!=col&&a[x*m+y]%1000000<=v&&a[x*m+y]/1000000!=2)
			{
				if(c[x*m+y]==0)c[x*m+y]=1,
				ans++;
			}
			if(a[x*m+y]/1000000==2)
			{
				dfs(col,v,x+1,y,4);
			}
		}
		//3
		if(heng[(x-1)*m+y]==3&&y<m)
		{
			if(a[(x-1)*m+y+1]/1000000!=col&&a[(x-1)*m+y+1]%1000000<=v&&a[(x-1)*m+y+1]/1000000!=2)
			{
				if(c[(x-1)*m+y+1]==0)c[(x-1)*m+y+1]=1,
				ans++;
			}
			if(a[(x-1)*m+y+1]/1000000==2&&b[(x-1)*m+y+1]==0)
			{
				b[(x-1)*m+y+1]=1;
				dfs(col,v,x,y+1,5);
				b[(x-1)*m+y+1]=0;
			}
		}
		if(heng[(x-1)*m+y-1]==3&&y>1)
		{
			if(a[(x-1)*m+y-1]/1000000!=col&&a[(x-1)*m+y-1]%1000000<=v&&a[(x-1)*m+y-1]/1000000!=2)
			{
				if(c[(x-1)*m+y-1]==0)c[(x-1)*m+y-1]=1,
				ans++;
			}
			if(a[(x-1)*m+y-1]/1000000==2&&b[(x-1)*m+y-1]==0)
			{
				b[(x-1)*m+y-1]=1;
				dfs(col,v,x,y-1,5);
				b[(x-1)*m+y-1]=0;
			}
		}
		if(zong[(x-2)*m+y]==3&&x>1)
		{
			if(a[(x-2)*m+y]/1000000!=col&&a[(x-2)*m+y]%1000000<=v&&a[(x-2)*m+y]/1000000!=2)
			{
				if(c[(x-2)*m+y]==0)c[(x-2)*m+y]=1,
				ans++;
			}
			if(a[(x-2)*m+y]/1000000==2&&b[(x-2)*m+y]==0)
			{
				b[(x-2)*m+y]=1;
				dfs(col,v,x-1,y,5);
				b[(x-2)*m+y]=0;
			}
		}
		if(zong[(x-1)*m+y]==3&&x<n)
		{
			if(a[x*m+y]/1000000!=col&&a[x*m+y]%1000000<=v&&a[x*m+y]/1000000!=2)
			{
				if(c[x*m+y]==0)c[x*m+y]=1,
				ans++;
			}
			if(a[x*m+y]/1000000==2&&b[x*m+y]==0)
			{
				b[x*m+y]=1;
				dfs(col,v,x+1,y,5);
				b[x*m+y]=0;
			}
		}
	}
	
	if(num==5)
	{
		if(heng[(x-1)*m+y]==3&&y<m)
		{
			if(a[(x-1)*m+y+1]/1000000!=col&&a[(x-1)*m+y+1]%1000000<=v&&a[(x-1)*m+y+1]/1000000!=2)
			{
				if(c[(x-1)*m+y+1]==0)c[(x-1)*m+y+1]=1,
				ans++;
			}
			if(a[(x-1)*m+y+1]/1000000==2&&b[(x-1)*m+y+1]==0)
			{
				b[(x-1)*m+y+1]=1;
				dfs(col,v,x,y+1,5);
				b[(x-1)*m+y+1]=0;
			}
		}
		if(heng[(x-1)*m+y-1]==3&&y>1)
		{
			if(a[(x-1)*m+y-1]/1000000!=col&&a[(x-1)*m+y-1]%1000000<=v&&a[(x-1)*m+y-1]/1000000!=2)
			{
				if(c[(x-1)*m+y-1]==0)c[(x-1)*m+y-1]=1,
				ans++;
			}
			if(a[(x-1)*m+y-1]/1000000==2&&b[(x-1)*m+y-1]==0)
			{
				b[(x-1)*m+y-1]=1;
				dfs(col,v,x,y-1,5);
				b[(x-1)*m+y-1]=0;
			}
		}
		if(zong[(x-2)*m+y]==3&&x>1)
		{
			if(a[(x-2)*m+y]/1000000!=col&&a[(x-2)*m+y]%1000000<=v&&a[(x-2)*m+y]/1000000!=2)
			{
				if(c[(x-2)*m+y]==0)c[(x-2)*m+y]=1,
				ans++;
			}
			if(a[(x-2)*m+y]/1000000==2&&b[(x-2)*m+y]==0)
			{
				b[(x-2)*m+y]=1;
				dfs(col,v,x-1,y,5);
				b[(x-2)*m+y]=0;
			}
		}
		if(zong[(x-1)*m+y]==3&&x<n)
		{
			if(a[x*m+y]/1000000!=col&&a[x*m+y]%1000000<=v&&a[x*m+y]/1000000!=2)
			{
				if(c[x*m+y]==0)c[x*m+y]=1,
				ans++;
			}
			if(a[x*m+y]/1000000==2&&b[x*m+y]==0)
			{
				b[x*m+y]=1;
				dfs(col,v,x+1,y,5);
				b[x*m+y]=0;
			}
		}
	}
	if(num==1)
	{
		if(heng[(x-1)*m+y]==2&&y<m)
		{
			if(a[(x-1)*m+y+1]/1000000!=col&&a[(x-1)*m+y+1]%1000000<=v&&a[(x-1)*m+y+1]/1000000!=2)
			{
				if(c[(x-1)*m+y+1]==0)c[(x-1)*m+y+1]=1,
				ans++;
			}
			if(a[(x-1)*m+y+1]/1000000==2)
			{
				dfs(col,v,x,y+1,1);
			}
		}
	}
	if(num==2)
	{
		if(heng[(x-1)*m+y-1]==2&&y>1)
		{
			if(a[(x-1)*m+y-1]/1000000!=col&&a[(x-1)*m+y-1]%1000000<=v&&a[(x-1)*m+y-1]/1000000!=2)
			{
				if(c[(x-1)*m+y-1]==0)c[(x-1)*m+y-1]=1,
				ans++;
			}
			if(a[(x-1)*m+y-1]/1000000==2)
			{
				dfs(col,v,x,y-1,2);
			}
		}
	}
	if(num==3)
	{
		if(zong[(x-2)*m+y]==2&&x>1)
		{
			if(a[(x-2)*m+y]/1000000!=col&&a[(x-2)*m+y]%1000000<=v&&a[(x-2)*m+y]/1000000!=2)
			{
				if(c[(x-2)*m+y]==0)c[(x-2)*m+y]=1,
				ans++;
			}
			if(a[(x-2)*m+y]/1000000==2)
			{
				dfs(col,v,x-1,y,3);
			}
		}
	}
	if(num==4)
	{
		if(zong[(x-1)*m+y]==2&&x<n)
		{
			if(a[x*m+y]/1000000!=col&&a[x*m+y]%1000000<=v&&a[x*m+y]/1000000!=2)
			{
				if(c[x*m+y]==0)c[x*m+y]=1,
				ans++;
			}
			if(a[x*m+y]/1000000==2)
			{
				dfs(col,v,x+1,y,4);
			}
		}
	}
}
int main()
{
	freopen("chess.in","r",stdin);
	freopen("chess.out","w",stdout);
	cin>>T;
	for(int zzz=1;zzz<=T;zzz++)
	{
		cin>>n>>m>>q;
		nx=n-1;
		mx=m-1;
		for(int i=1;i<=1000000;i++)a[i]=2000000;
		memset(heng,0,sizeof(heng));
		memset(zong,0,sizeof(zong));
		memset(c,0,sizeof(c));
		for(int i=1;i<=n;i++)
		{
			string s;
			cin>>s;
			for(int j=1;j<=mx;j++)
			{
				heng[(i-1)*m+j]=s[j-1]-'0';
			}
		}
		for(int i=1;i<=nx;i++)
		{
			string s;
			cin>>s;
			for(int j=1;j<=m;j++)
			{
				zong[(i-1)*m+j]=s[j-1]-'0';
			}
		}
		for(int i=1;i<=q;i++)
		{
			memset(c,0,sizeof(c));
			int col,v,x,y;
			scanf("%d%d%d%d",&col,&v,&x,&y);
			a[(x-1)*m+y]=col*1000000+v;
			ans=0;
			dfs(col,v,x,y,0);
			cout<<ans-1<<endl;
		}
	}
	return 0;
}

